name: SetProgramOptions Testing
on:
  push:
  pull_request:
  schedule:
    - cron: '0 13,1 * * *'

defaults:
  run:
    shell: bash

env:
  cache-name: venv-cache
  venv-name: venv-python

jobs:
  install_requirements:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.venv-name }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: source

      - name: Build VirtualEnv
        run: |
          # cd ${{ github.workspace }}
          #echo "cache name : ${{ env.cache-name }}"
          #echo "github.head_ref: '${{ github.head_ref }}'"
          #echo "github.sha     : '${{ github.sha }}'"
          #pwd
          #ls -ltrhF
          python3 --version > version.txt
          cat version.txt
          python3 -m venv ${{ env.venv-name }}
          source ${{ env.venv-name }}/bin/activate
          cd source
          # python3 -m pip install wheel configparserenhanced @ git+https://github.com/sandialabs/ConfigParserEnhanced.git@master#egg=configparserenhanced
          python3 -m pip install wheel -r requirements.txt -r requirements-test.txt -r doc/requirements.txt
          ls -ltrhF

  pytest:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [install_requirements]
    steps:
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.venv-name }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: source

      - name: Execute
        run: |
          source ${{ env.venv-name }}/bin/activate
          python3 -m pytest --version
          python3 -m pytest --cov=configparserenhanced --cov-report=term --cov-report=html --cov-report=html:${{ github.workspace }}/htmlcov --cov-config=.coveragerc
          ls -ltrhF ${{ github.workspace }}/htmlcov

      - name: Save Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: htmlcov
          retention-days: 5











#      - name: Cache
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-venv
#        with:
#          key: v1-deps-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: v1-deps-



